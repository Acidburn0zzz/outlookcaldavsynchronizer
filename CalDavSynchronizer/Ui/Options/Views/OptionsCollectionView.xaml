<UserControl x:Class="CalDavSynchronizer.Ui.Options.Views.OptionsCollectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mappingViewModels="clr-namespace:CalDavSynchronizer.Ui.Options.ViewModels.Mapping"
             xmlns:mapping="clr-namespace:CalDavSynchronizer.Ui.Options.Views.Mapping"
             xmlns:viewModels="clr-namespace:CalDavSynchronizer.Ui.Options.ViewModels"
             xmlns:views="clr-namespace:CalDavSynchronizer.Ui.Options.Views"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{x:Static  viewModels:OptionsCollectionViewModel.DesignInstance}">

  <UserControl.Resources>
    <Style TargetType="FrameworkElement">
      <Setter Property="Margin" Value="3"></Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
      <Setter Property="Padding" Value="12,1"></Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
      <Setter Property="Padding" Value="12,1"></Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
      <!--<Setter Property="Background" Value="Red"></Setter>-->

    </Style>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
      <!--<Setter Property="Background" Value="Red"></Setter>-->

    </Style>


    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
      <!--<Setter Property="Background" Value="Yellow"></Setter>-->
      <Setter Property="Margin" Value="3,5,6,3"></Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
    </Style>

    <ControlTemplate x:Key="GroupBoxControlTemplate" TargetType="{x:Type GroupBox}">
      <DockPanel SnapsToDevicePixels="True">
        <Border x:Name="Header" Background="{x:Static SystemColors.ControlLightBrush}" Padding="3" DockPanel.Dock="Top">
          <ContentPresenter TextBlock.FontWeight="Bold" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </DockPanel>
    </ControlTemplate>


    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
      <Setter Property="Padding" Value="3,6,3,3"></Setter>
      <Setter Property="Template" Value="{StaticResource GroupBoxControlTemplate}"></Setter>
    </Style>

 
  </UserControl.Resources>
  
  <DockPanel>
    <DockPanel DockPanel.Dock="Bottom">
      <Button Command="{Binding AddCommand}" DockPanel.Dock="Left">Add</Button>
      <UniformGrid DockPanel.Dock="Right" Columns="2" Rows="1">
        <Button Command="{Binding CloseCommand}" Content="Ok">
          <Button.CommandParameter>
            <system:Boolean>true</system:Boolean>
          </Button.CommandParameter>
        </Button>
        <Button Command="{Binding CloseCommand}" Content="Cancel">
          <Button.CommandParameter>
            <system:Boolean>false</system:Boolean>
          </Button.CommandParameter>
        </Button>
      </UniformGrid>
      <UIElement></UIElement>
    </DockPanel>
    
    <TreeView MinWidth="220" MaxWidth="300" Margin="3"  DockPanel.Dock="Left" ItemsSource="{Binding Options}" x:Name="OptionsTree">
      <TreeView.Resources>
        <views:OlItemTypeToImageConverter x:Key="OlItemTypeToImageConverter"></views:OlItemTypeToImageConverter>
      </TreeView.Resources>
     <TreeView.ItemTemplate>
        <HierarchicalDataTemplate ItemsSource="{Binding SubOptions}">
          <StackPanel Orientation="Horizontal" Margin="0,2,3,1">
            <Image Height="16" Width="16" Source="{Binding OutlookFolderType,Converter={StaticResource OlItemTypeToImageConverter}}" >
           
            </Image>
            <CheckBox Margin="2,0" IsChecked="{Binding IsActive}" />
            <TextBlock Text="{Binding Name}"></TextBlock>
          </StackPanel>
          <HierarchicalDataTemplate.ItemTemplate>
            <HierarchicalDataTemplate ItemsSource="{Binding SubOptions}">
              <TextBlock Text="{Binding Name}"></TextBlock>
           </HierarchicalDataTemplate>
          </HierarchicalDataTemplate.ItemTemplate>
        </HierarchicalDataTemplate>
      </TreeView.ItemTemplate>
      <TreeView.ItemContainerStyle>
        <Style TargetType="{x:Type TreeViewItem}">
          <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        </Style>
      </TreeView.ItemContainerStyle>
    </TreeView>
   
    <ContentControl Content="{Binding ElementName=OptionsTree,Path=SelectedItem}">

      <ContentControl.Resources>
        <DataTemplate DataType="{x:Type mappingViewModels:ContactMappingConfigurationViewModel}">
          <mapping:ContactMappingConfigurationView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type mappingViewModels:TaskMappingConfigurationViewModel}">
          <mapping:TaskMappingConfigurationView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type mappingViewModels:EventMappingConfigurationViewModel}">
          <mapping:EventMappingConfigurationView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:SyncSettingsViewModel}">
          <views:SyncSettingsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:NetworkSettingsViewModel}">
          <views:NetworkSettingsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:ServerSettingsViewModel}">
          <views:ServerSettingsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:GoogleServerSettingsViewModel}">
          <views:GoogleServerSettingsView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:OutlookFolderViewModel}">
          <views:OutlookFolderView />
        </DataTemplate>

        <views:BooleanNotConverter x:Key="BooleanNotConverter"></views:BooleanNotConverter>
        
        <DataTemplate DataType="{x:Type viewModels:OptionsViewModelBase}">
          <DockPanel>
            <DockPanel DockPanel.Dock="Top">
              <TextBlock Style="{StaticResource {x:Type TextBlock}}" DockPanel.Dock="Left" Text="Name:" />
              <TextBox Text="{Binding Name}" />
            </DockPanel>
            <DockPanel DockPanel.Dock="Bottom" >
              <Button Command="{Binding DeleteCommand}" DockPanel.Dock="Left">Delete</Button>
              <Button  Command="{Binding CopyCommand}" DockPanel.Dock="Left">Copy</Button>
              <Button  Command="{Binding ClearCacheCommand}" DockPanel.Dock="Left">Clear cache</Button>
              <CheckBox IsChecked="{Binding IsActive}" DockPanel.Dock="Right">Is active</CheckBox>
              <UIElement></UIElement>
            </DockPanel>

            <ItemsControl ItemsSource="{Binding Sections}" />
          </DockPanel>
        </DataTemplate>
      </ContentControl.Resources>

    </ContentControl>
  </DockPanel>

</UserControl>